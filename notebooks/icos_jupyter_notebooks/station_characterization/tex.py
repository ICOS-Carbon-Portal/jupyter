# -*- coding: utf-8 -*-
"""
Functions to run create a valid tex file which can be processed
by pdflatex
"""

import os
import os.path

def _template_specifications(standalone=False):
    
    tex = """

        \\begin{flushleft}
        \\begin{large}
        \\textbf{Specifications}
        \\end{large}
        \\end{flushleft}


        All the visualizations and information in this document are based on footprints generated by \\href{http://stilt-model.org/index.php/Main/HomePage}{STILT}, a lagrangian atmospheric transport model, implemented as \href{https://www.icos-cp.eu/data-services/tools/stilt-footprint}{online tool} at the ICOS Carbon Portal. Output footprints are presented on a grid with 1/12×1/8 degrees cells (approximately 10km x 10km) where the cell values represent the cell area’s estimated surface influence (“sensitivity”) in ppm / (\\SI{}{\\micro\\mol}/ (m²s)) on the atmospheric tracer concentration at the station. The footprints for a given station vary in time according to meteorological conditions. Combining individual footprints with an anthropogenic emission inventory (\\href{https://doi.org/10.5194/essd-11-959-2019}{EDGAR}) and a biogenic model (\\href{https://doi.org/10.1029/2006GB002735}{VPRM}), which models the exchange of the tracer between the atmosphere and the natural surface vegetation, results in estimates of the anthropogenic emissions contribution, and the biogenic component, on the {\\ensuremath{\\mathrm{CO_2}}} mole fraction at the station.\\newline 

        For all maps and the land cover polar graph, an average footprint for the specified date range has been used. In the \\textbf{sensitivity area map} the 192 000 cells have been aggregated depending on their distance to, and direction of, the station. The same aggregation principles were used for the \\textbf{population sensitivity map} and \\textbf{point source contribution map}, where the average footprint cells were multiplied by underlying ancillary data layers. The population data are from \\href{https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/population-distribution-demography/geostat}{GEOSTAT} (2011) and point source emissions data from \\href{https://www.eea.europa.eu/data-and-maps/data/member-states-reporting-art-7-under-the-european-pollutant-release-and-transfer-register-e-prtr-regulation-22}{E-PRTR} (2017). The resulting values in the population map are mainly interesting for intercomparisons between areas, whereas the point source emissions were converted to estimated contribution to the {\\ensuremath{\\mathrm{CO_2}}} mole fraction at the station. The descriptions of the maps include what quartiles the station falls into in terms of absolute ranking among selected ICOS atmospheric stations. The first quartile includes the stations with the lowest total average values. \\newline

        The \\textbf{land cover polar graphs} are similar to the maps in that the centre represents the location of the station and the direction bins have been used to aggregate data but do not represent the distance of the land cover type to the station. Each land cover type of the \\href{https://land.copernicus.eu/pan-european/corine-land-cover/clc2018} {CORINE} (2018) dataset is weighted by the average footprint. The legend shows the breakdown of the influence area to the major land cover types, and the area of a land cover type in the figure represents its presence in each direction of the station. The dominant land cover type is closest to the centre, with the less significant land cover types displayed in descending order. The \\textbf{land cover bar graph} is a simpler way to visualize land cover type by direction. Eight 45 degrees bins around the station are represented by stacked bars. \\newline 

        The \\textbf{seasonal variations table} shows the average anthropogenic and biogenic contributions during the different seasons of the year. The biogenic contributions include respiration ({\ensuremath{\mathrm{CO_2}}} input to the atmosphere) and Gross Ecosystem Exchange (GEE, {\ensuremath{\mathrm{CO_2}}} uptake by the biosphere). Individual footprints with associated estimates of {\ensuremath{\mathrm{CO_2}}} concentration components from respiration and GEE, as well as from anthropogenic emissions are displayed on the \href{https://stilt.icos-cp.eu/viewer/}{STILT result visualization page}. The values for sensitivity, point source contribution and population are produced by summarizing the cells of maps where these layers have been multiplied by average footprints for the different parts of the year. The seasonal values are shown relative to the yearly averages. A positive relative difference of the seasonal GEE means more uptake of {\ensuremath{\mathrm{CO_2}}}, which is usually true for the growing seasons.\\newline
        
        The same type of values that are presented in the seasonal variations table but for the average footprint of the selected data range are used in the \textbf{multiple variable graph} to place the selected station relative to reference atmospheric stations in the ICOS network. The placement on the y-axis is determined relative to the minimum and maximum variable values of these stations and the selected station. 0\% indicates the station with the lowest variable value, and 100\% the highest. 
        
        \\pagebreak\n

        \\begin{flushleft}
        \\begin{large}
        \\textbf{Additional resources}
        \\end{large}
        \\end{flushleft}

        More specifics about the processing of the ancillary data layers can be found in \\href{https://lup.lub.lu.se/student-papers/search/publication/9007298}{Storm (2020)} (section 3.3). \\newline

        An interactive Jupyter Notebook is available at \\href{https://exploredata.icos-cp.eu}{ICOS explore data} and can be used to output the figures and maps presented in this document, e.g. for a different time-period and/or specific hour(s) of the day. It is also possible to change the bin-sizes and intervals used in the maps and the land cover wind rose. Furthermore, it is possible to generate a characterisation for a hypothetical station. The only requirement is that footprints have been generated using the \\href{https://stilt.icos-cp.eu/worker/}{STILT on demand calculator}. \\newline
       
     """
    
    if not standalone:
        
        tex_settings="""

                To re-generate this PDF in the interactive Notebook, use the following settings. Copy and save the information as a JSON-file and use the option to "Load settings from file".

             \\begin{verbatim}
               {
                "stationCode": "**stationCode**",
                "startYear": **startYear**,
                "startMonth": **startMonth**,
                "startDay": **startDay**,
                "endYear": **endYear**,
                "endMonth": **endMonth**,
                "endDay": **endDay**,
                "timeOfDay": **timeOfDay**,
                "binSize": **binSize**,
                "binInterval": **binInterval**,
                "unit": "**unit**",
                "labelPolar": "**labelPolar**",
                "saveFigs": "**saveFigs**"
                }
             \\end{verbatim}
             """
        
        tex=tex+tex_settings
        return tex
    
    else:
        
        return tex


def _template():
    '''
    Return the texfile as a string. The string is a complete texfile representing the station characterisation, 
    but is NOT adapted to the specific run. String replacements are marked with a double **, like **stationId**, 
    which then should be replaced with stationId etc.
    
    '''
    
    tex = """
        \\documentclass[a4paper,11pt]{article}
        \\usepackage{graphicx,caption}
        \\usepackage[bottom=1in,top=1in, left=1in, right=1in]{geometry}
        \\usepackage{subcaption}
        \\usepackage{geometry}
        \\pagenumbering{gobble}
        \\usepackage{sidecap}
        \\usepackage[export]{adjustbox}
        \\usepackage[margin=1cm]{caption}
        \\captionsetup[subfigure]{labelformat=empty}
        \\usepackage{pdfpages}
        \\usepackage{sectsty}
        \\usepackage{siunitx}
        \\usepackage{hyperref}
        \\hypersetup{
            colorlinks=true,
            linkcolor=blue,
            filecolor=blue,      
            urlcolor=blue,
        }
        %top-right corner logo
        \\usepackage[T1]{fontenc}
        \\usepackage[ngerman]{babel}
        %to add text in margins
        \\usepackage[absolute]{textpos}
        \\setlength{\TPHorizModule}{1mm}
        \\setlength{\TPVertModule}{1mm}
        \\usepackage{blindtext}
        %nicer date at bottom:
        \\usepackage[yyyymmdd]{datetime}
        
        
        \\begin{document}

        %date 
        \\renewcommand{\dateseparator}{--}
        \\newcommand\AtPageUpperRight[1]{\AtPageUpperLeft{%
           \\makebox[\paperwidth][r]{#1}}}

        \\AddToShipoutPictureBG*{%
          \\AtPageUpperRight{\\raisebox{-\height}{\includegraphics[trim={0 0 10cm 0},clip, width=8cm]{Icos_cp_Logo_RGB}}}}

        \\begin{flushleft}
        \\begin{huge}
        **name** station characterisation
        \\end{huge}\n
        \\begin{large}
        \\bigskip
The station characterisation is based on STILT model footprints, an anthropogenic emission inventory, a biogenic flux model and ancillary data layers. More detailed information is provided at the end of this document.
        **name** is **class_type_text** located in **country** (latitude: **lat**°N \\unskip, longitude: **lon**°E \\unskip).
        \\end{large}
        \\end{flushleft}\n

        \\begin{figure}[!h]
        \\includegraphics[width=0.53\\textwidth]{**sensitivity**}
        \\raisebox{4.7cm}[0pt][0pt]{%
        \\hspace{-0.35cm}%
        \\captionsetup{labelformat=empty}
        
        \\parbox{7.9cm}{\\caption{\\begin{small}\\\\\\\\\\textbf{Model height:} **model_height**\\\\
        \\textbf{Date range:} **date_range**\\\\
        \\textbf{Hour(s):} **hours**\\\\
        The map bins are **degrees** degrees at **increment** km increments.\\\\\\\\
        The \\textbf{sensitivity area map} shows the average footprint/sensitivity area. The darker the colour, the more important the area is as a potential source influencing the measured concentrations. The total sensitivity to the surface varies between stations and **name** is in the **quartile_sensitivity** compared to selected reference ICOS atmospheric stations (see multiple variable graph).
        \\end{small}}}}
        \\end{figure}

        \\begin{figure}[!h]
        \\begin{subfigure}[t]{0.5\\textwidth}
        \\includegraphics[width=0.85\\linewidth]{**population**}
        \\centering
        \\captionsetup{width=.8\\linewidth}
        \\caption{\\begin{small}The \\textbf{population sensitivity map} is the result of the average sensitivity map multiplied by the number of people living within each footprint cell. Relative to the reference atmospheric stations, **name** is in the **quartile_population** regarding sensitivity to population.\\end{small}}
        \\end{subfigure}%
        \\begin{subfigure}[t]{0.5\\textwidth}
        \\includegraphics[width=0.85\\linewidth]{**pointsource**}
        \\centering
        \\captionsetup{width=.8\\linewidth}
        \\caption{\\begin{small}The \\textbf{point source contribution map} is the result of the average sensitivity map multiplied by the {\\ensuremath{\\mathrm{CO_2}}} emissions from industrial facilities within each footprint cell, translated into expected influence on the {\\ensuremath{\\mathrm{CO_2}}} concentration at the station. Relative to the reference atmospheric stations, **name** is in the **quartile_pointsource** regarding contribution from point sources.\\end{small}}
        \\end{subfigure}
        \\end{figure}\n
        
        %text in margin
        \\begin{textblock}{70}(115,280)
        \\noindent Date and time generated: \\today \\hspace{0.1cm} \\currenttime
        \\end{textblock}

        \\pagebreak\n
        
        \\begin{figure}[!h]
        \\centering
        **seasonal**
        \\end{figure}
        
        %text in margin
        \\begin{textblock}{70}(115,280)
        \\noindent Date and time generated: \\today \\hspace{0.1cm} \\currenttime
        \\end{textblock}
        
        \\begin{flushleft}
        \\begin{small}**seasonal_text**
        \\end{small}
        \\end{flushleft}
        
        \\begin{figure}[!h]
        \\includegraphics[width=1\\textwidth]{**landcover_bar**}
        \\end{figure}
    
        \\begin{flushleft}
        \\begin{small}Contributions of different land cover types within **name**´s average footprint is shown in the  \\textbf{land cover bar graph}. The total contributions are listed in the legend and their relative occurrences in the different directions of the stations (North-East, East, South-East etc.) are indicated by the graph. \\end{small}
        \\end{flushleft}
        
        \\pagebreak

        \\begin{flushleft}
        \\begin{large}
        \\textbf{Advanced figures}\\\\
        
        \\bigskip
        
The following figures present more advanced syntheses, so please carefully read the explanations. Further information is found the specifications at the end of this document.

        \\end{large}
        \\end{flushleft}
        
        \\begin{figure}[!h]
        \\includegraphics[width=0.75\\textwidth]{**landcover_windrose**}
        \\raisebox{6.5cm}[0pt][0pt]{%
        \\hspace{9.05cm}%
        \\captionsetup{labelformat=empty}
        \\parbox{7.9cm}{\\caption{\\begin{small}The \\textbf{land cover polar graph} summarizes the distribution of land cover types in the average footprint around the station (located in the centre of the graph). Note that the area of a land cover type in the graph corresponds its relative contribution with the highest contributing type located closest to the centre. \\end{small}}}}
        \\end{figure}
        
        \\begin{figure}[!h]
        \\includegraphics[width=0.57\\textwidth]{**multivar**}
        \\raisebox{4.8cm}[0pt][0pt]{%
        \\hspace{-0.3cm}%
        \\captionsetup{labelformat=empty}
        \\parbox{7.9cm}{\\caption{\\begin{small}Selected reference atmospheric stations are compared in this \\textbf{multiple variable graph}. **name**'s values are shown with the black line and the points' placements on the y-axis are determined relative to the minimum (0\\%) and maximum (100\\%) of the other stations. The same variables are the same as the ones in the seasonal variations table are shown. \\end{small}}}}
        \\end{figure}
        
        %text in margin
        \\begin{textblock}{70}(115,280)
        \\noindent Date and time generated: \\today \\hspace{0.1cm} \\currenttime
        \\end{textblock}
        \\pagebreak
        
        """
    return tex


def generate_pdf_tex(stc):
    """       
    Provide an stc object, which contains all the necessary information to create the texfile
    see class stationchar.py based on a template for icos stations
    Parameters
    ----------
    stc : stationchar object, contains figures, captions, etc
            
    Returns
    -------
    STR: the complete tex file as string, which can be run on the system to create a pdf file output.

    """
    
    output = stc.settings['output_folder']
        
    tex = _template()

    tex=tex.replace('**sensitivity**', os.path.join(output, stc.figures['1'][2])) 
    tex=tex.replace('**pointsource**', os.path.join(output, stc.figures['2'][2]))
    tex=tex.replace('**population**', os.path.join(output, stc.figures['3'][2]))
    tex=tex.replace('**landcover_bar**', os.path.join(output, stc.figures['4'][2]))
    
    string_seasonal='./' + os.path.join(output, stc.figures['5'][2]) 
    
    if os.path.isfile(string_seasonal):
        tex=tex.replace('**seasonal**', ('\\includegraphics[width=1\\textwidth]{' + os.path.join(output, stc.figures['5'][2]) + '}'))
        tex=tex.replace('**seasonal_text**', 'The \\textbf{seasonal variations table} summarizes the results for the year **year** (Dec **dec_year** - Nov **year**) and lists for each season the relative difference compared to the annual average. Gross ecosystem exchange (GEE), respiration and anthropogenic emission contributions to the {\ensuremath{\mathrm{CO_2}}} concentration are calculated online in the STILT model (see detailed specifications at the end of this document). A positive GEE value means that there is more {\\ensuremath{\\mathrm{CO_2}}} uptake from the vegitation compared to the average uptake from plants over the whole year, which is generally true for the growing seasons.')
     
    else:     
        tex=tex.replace('**seasonal**', '%\\includegraphics[width=1\\textwidth]{no table- this line will not run}')
        tex=tex.replace('**seasonal_text**', '\\textbf{No seasonal table}: footprints from December **dec_year** to November **year** are not avaialble for **name** (**station_code**). Use the \\href{https://stilt.icos-cp.eu/worker/}{STILT on demand calculator} to create the remaining footprints.')
        
    tex=tex.replace('**landcover_windrose**', os.path.join(output, stc.figures['6'][2]))
    tex=tex.replace('**multivar**', os.path.join(output, stc.figures['7'][2]))
    
    tex=tex.replace('**quartile_sensitivity**', stc.settings['Sensitivity'])
    tex=tex.replace('**quartile_population**', stc.settings['Population'])
    tex=tex.replace('**quartile_pointsource**', stc.settings['Point source'])
    
    tex=tex.replace('**country**', stc.country)
    
    tex=tex.replace('**station_code**', stc.settings['stationCode'])
    
    tex=tex.replace('**year**', str(stc.settings['startYear']))
    tex=tex.replace('**dec_year**', str(int(stc.settings['startYear'])-1))
    
    tex=tex.replace('**degrees**', str(stc.settings['binSize']))
    tex=tex.replace('**increment**', str(stc.settings['binInterval']))
    
    date_string=str(stc.settings['startYear']) + '-' + str(stc.settings['startMonth']) + '-' + str(stc.settings['startDay']) + ' to ' + str(stc.settings['endYear']) + '-' + str(stc.settings['endMonth']) + '-' + str(stc.settings['endDay'])
    
    timeselect_list = stc.settings['timeOfDay']
    timeselect_string=[str(value) for value in timeselect_list]
    hours_string =':00, '.join(timeselect_string) + ':00'
    
    tex=tex.replace('**date_range**', date_string)
    tex=tex.replace('**hours**', hours_string)
    
    tex=tex.replace('**model_height**', (str(stc.settings['stilt']['alt']) + 'm above ground **mountain_message**'))
    
    if stc.settings['stilt']['icos']:
        if stc.settings['icos']['siteType']=='mountain' or stc.settings['icos']['siteType']=='Mountain':
            tex=tex.replace('**mountain_message**', '(might be different from station intake height since mountain station, see \\href{https://www.icos-cp.eu/about-stilt-calculator}{link})')
        else:
            tex=tex.replace('**mountain_message**', '')
    else:
        tex=tex.replace('**mountain_message**', '')   
                    
    
    if stc.settings['stilt']['icos']:   
        tex=tex.replace('**name**', stc.settings['icos']['name'])
        tex=tex.replace('**lat**', str(round(stc.settings['icos']['lat'], 2)))
        tex=tex.replace('**lon**', str(round(stc.settings['icos']['lon'], 2)))
        tex=tex.replace('**class_type_text**', ('a class ' + str(stc.settings['icos']['icosclass']) +\
                       ' ICOS atmospheric station of the type ' + str(stc.settings['icos']['siteType'])))
    
    else:
        tex=tex.replace('**name**', stc.settings['stilt']['name'])
        tex=tex.replace('**class_type_text**', '')
        tex=tex.replace('**lat**', str(round(stc.settings['stilt']['lat'], 2)))
        tex=tex.replace('**lon**', str(round(stc.settings['stilt']['lon'], 2)))

    return tex

def generate_specifications(stc, standalone=False):
  
    
    if not standalone:
        
        tex_specifications = _template_specifications()
    
        list_timeOfDay= list(stc.settings['timeOfDay'])
        timeOfDayStr = ', '.join([str(elem) for elem in list_timeOfDay])
        timeOfDayStr='[' + timeOfDayStr + ']'

        tex_specifications = tex_specifications.replace('**stationCode**', stc.settings['stationCode'])
        tex_specifications = tex_specifications.replace('**startYear**', str(stc.settings['startYear']))
        tex_specifications = tex_specifications.replace('**startMonth**', str(stc.settings['startMonth']))
        tex_specifications = tex_specifications.replace('**startDay**', str(stc.settings['startDay']))
        tex_specifications = tex_specifications.replace('**endYear**', str(stc.settings['endYear']))
        tex_specifications = tex_specifications.replace('**endMonth**', str(stc.settings['endMonth']))
        tex_specifications = tex_specifications.replace('**endDay**', str(stc.settings['endDay']))
        tex_specifications = tex_specifications.replace('**timeOfDay**', timeOfDayStr)
        tex_specifications = tex_specifications.replace('**binSize**', str(stc.settings['binSize']))
        tex_specifications = tex_specifications.replace('**binInterval**', str(stc.settings['binInterval']))
        tex_specifications = tex_specifications.replace('**unit**', stc.settings['unit'])
        tex_specifications = tex_specifications.replace('**labelPolar**', stc.settings['labelPolar'])
        tex_specifications = tex_specifications.replace('**saveFigs**', stc.settings['saveFigs'])
        
        return tex_specifications
    
    else:
        
        tex_specifications = _template_specifications(standalone=True)
        
        begin="""
        
        \\documentclass[a4paper,11pt]{article}
        \\usepackage{graphicx,caption}
        \\usepackage[bottom=1in,top=1in, left=1in, right=1in]{geometry}
        \\usepackage{subcaption}
        \\usepackage[margin=1cm]{caption}
        \\captionsetup[subfigure]{labelformat=empty}
        \\usepackage{pdfpages}
        \\usepackage{siunitx}
        \\usepackage{sectsty}
        \\usepackage{hyperref}
        \\hypersetup{
            colorlinks=true,
            linkcolor=blue,
            filecolor=blue,      
            urlcolor=blue,
        }
        \\begin{document}
        """
        
        end="""
        
        \\end{document}
        """
        
        standalone_tex_specifications= begin + tex_specifications + end
        
        return standalone_tex_specifications
        
        
def generate_full(stc):
      
    tex= generate_pdf_tex(stc)
    tex_specifications=generate_specifications(stc)
    
    full_tex=tex + tex_specifications  + '\\end{document}'
    
    return full_tex