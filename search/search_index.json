{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ICOS The Integrated Carbon Observation System, ( ICOS, https://www.icos-cp.eu/ ), is a European research infrastructure responsible for measuring, storing and disseminating standardised, high quality, long timeseries of observations on greenhouse gas concentrations in the atmosphere, as well as on carbon fluxes between the atmosphere, the earth and oceans. The ICOS station network consists of about 150 stations all over Europe, subdivided into three separate domains; atmosphere, ecosystem and ocean. ICOS Carbon Portal is the data centre of ICOS and is responsible for storing and disseminating ICOS data. To promote the usage of its available data, ICOS Carbon Portal offers a range of services towards researchers/scientists, policy makers and the general public. Virtual Research Environments based on Jupyter ( https://jupyter.org/ ) constitute one part of these services. Jupyter Jupyter is a Virtual Research Environment (VRE) incorporating a collection of tools for interactive computing and sharing of computational ideas. From within every user account, it is possible to: create directories upload data (e.g. csv, txt, netcdf, hdf, tiff, GeoTIFF, png, jpeg, etc.) create code files and write code (plain python code files (.py) or IPython notebook files (.ipynb)) Our service is based on the official Jupyter Dockerfile jupyter/datascience-notebook with kernels for Python, Julia and R available. Julia and R are 'out of the box', but for the time being the ICOS Carbon Portal only provides technical support for Python. IPython Notebooks An IPython Notebook is an open-source web application that allows users to create and share interactive documents that contain live code, equations, visualizations and narrative text. Access to notebooks and documentation All openly available ICOS notebooks and supporting documentation can be found in the ICOS Carbon Portal Jupyter repository on GitHub .","title":"About"},{"location":"#_1","text":"","title":""},{"location":"#icos","text":"The Integrated Carbon Observation System, ( ICOS, https://www.icos-cp.eu/ ), is a European research infrastructure responsible for measuring, storing and disseminating standardised, high quality, long timeseries of observations on greenhouse gas concentrations in the atmosphere, as well as on carbon fluxes between the atmosphere, the earth and oceans. The ICOS station network consists of about 150 stations all over Europe, subdivided into three separate domains; atmosphere, ecosystem and ocean. ICOS Carbon Portal is the data centre of ICOS and is responsible for storing and disseminating ICOS data. To promote the usage of its available data, ICOS Carbon Portal offers a range of services towards researchers/scientists, policy makers and the general public. Virtual Research Environments based on Jupyter ( https://jupyter.org/ ) constitute one part of these services.","title":"ICOS"},{"location":"#jupyter","text":"Jupyter is a Virtual Research Environment (VRE) incorporating a collection of tools for interactive computing and sharing of computational ideas. From within every user account, it is possible to: create directories upload data (e.g. csv, txt, netcdf, hdf, tiff, GeoTIFF, png, jpeg, etc.) create code files and write code (plain python code files (.py) or IPython notebook files (.ipynb)) Our service is based on the official Jupyter Dockerfile jupyter/datascience-notebook with kernels for Python, Julia and R available. Julia and R are 'out of the box', but for the time being the ICOS Carbon Portal only provides technical support for Python.","title":"Jupyter"},{"location":"#ipython-notebooks","text":"An IPython Notebook is an open-source web application that allows users to create and share interactive documents that contain live code, equations, visualizations and narrative text.","title":"IPython Notebooks"},{"location":"#access-to-notebooks-and-documentation","text":"All openly available ICOS notebooks and supporting documentation can be found in the ICOS Carbon Portal Jupyter repository on GitHub .","title":"Access to notebooks and documentation"},{"location":"changelog/","text":"Changelog Note : The python package of the ICOS Carbon Portal, icoscp , is always the latest version. For details we refer the user to ICOS Carbon Portal pylib - Changelog . 2.1.0 (07/03/2023) Add icos-splash to the docker image installation. Fork and patch nersc-announcements-extension to resolve TypeScript issues. Add jupyter-resource-usage to pip requirements. Add paramiko to pip requirements. Add kaleido version 0.2.1 to the docker image installation (28/04/2023). Add zip library to the docker image installation (20/03/2023). Other notebook fixes mentioned here . Update ipywidgets to version 8.0.4 and plotly to version 5.14.1 (13/04/2023). 2.0.1 (15/11/2022) Add PyGeodesy version 22.11.3 library to the docker image installation. Add utm version 0.7.0 library to the docker image installation. Fix errors caused by cartopy library. 2.0.0 (04/11/2022) Jupyter Classic vs JupyterLab Earlier versions of the Jupyter solutions provided by the ICOS Carbon Portal used the Jupyter Classic view. One major advantage of JupyterLab compared to Jupyter Classic is the possibility to work with several notebooks using tabs. The default view of ICOS Carbon Portal has changed to JupyterLab. For users who wish to use the Jupyter Classic view can do so by choosing Launch Classic view in the Help menu. For further reading on JupyterLab we refer to the JupyterLab documentation . Docker image of jupyter/datascience-notebook Image version: jupyter/datascience-notebook:dc95493e13c4 on linux/amd64 . Python 3.10.6 - link to packages JupyterLab 3.4.7 R 4.1.3 - link to packages Julia 1.8.2 - link to packages 1.0.0 Docker jupyter/datascience-notebook Image version: jupyter/datascience-notebook:5cb007f03275 on linux/amd64 . Python 3.8.6 - link to packages R 4.0.3 - link to packages Julia 1.5.3 - link to packages","title":"Changelog"},{"location":"changelog/#changelog","text":"Note : The python package of the ICOS Carbon Portal, icoscp , is always the latest version. For details we refer the user to ICOS Carbon Portal pylib - Changelog .","title":"Changelog"},{"location":"changelog/#210-07032023","text":"Add icos-splash to the docker image installation. Fork and patch nersc-announcements-extension to resolve TypeScript issues. Add jupyter-resource-usage to pip requirements. Add paramiko to pip requirements. Add kaleido version 0.2.1 to the docker image installation (28/04/2023). Add zip library to the docker image installation (20/03/2023). Other notebook fixes mentioned here . Update ipywidgets to version 8.0.4 and plotly to version 5.14.1 (13/04/2023).","title":"2.1.0 (07/03/2023)"},{"location":"changelog/#201-15112022","text":"Add PyGeodesy version 22.11.3 library to the docker image installation. Add utm version 0.7.0 library to the docker image installation. Fix errors caused by cartopy library.","title":"2.0.1 (15/11/2022)"},{"location":"changelog/#200-04112022","text":"","title":"2.0.0 (04/11/2022)"},{"location":"changelog/#jupyter-classic-vs-jupyterlab","text":"Earlier versions of the Jupyter solutions provided by the ICOS Carbon Portal used the Jupyter Classic view. One major advantage of JupyterLab compared to Jupyter Classic is the possibility to work with several notebooks using tabs. The default view of ICOS Carbon Portal has changed to JupyterLab. For users who wish to use the Jupyter Classic view can do so by choosing Launch Classic view in the Help menu. For further reading on JupyterLab we refer to the JupyterLab documentation .","title":"Jupyter Classic vs JupyterLab"},{"location":"changelog/#docker-image-of-jupyterdatascience-notebook","text":"Image version: jupyter/datascience-notebook:dc95493e13c4 on linux/amd64 . Python 3.10.6 - link to packages JupyterLab 3.4.7 R 4.1.3 - link to packages Julia 1.8.2 - link to packages","title":"Docker image of jupyter/datascience-notebook"},{"location":"changelog/#100","text":"","title":"1.0.0"},{"location":"changelog/#docker-jupyterdatascience-notebook","text":"Image version: jupyter/datascience-notebook:5cb007f03275 on linux/amd64 . Python 3.8.6 - link to packages R 4.0.3 - link to packages Julia 1.5.3 - link to packages","title":"Docker jupyter/datascience-notebook"},{"location":"faq/","text":"FAQ Cartopy maps. I get DownloadWarning and an Error message. All the cartopy maps used in our notebooks are stored locally on our data server. Accessing a cartopy map in any of these notebooks is actually a request to pre-downloaded local resources. This means that there are specific cartopy maps that can be used with a notebook. We are currently working to have a greater range of cartopy maps offline in order to assist as many users as possible. Workaround If you need to work with a map that currently is not in on our data server, you can comment out this line of code in the notebook \u279c cartopy.config['data_dir'] = '/data/project/cartopy/' The cartopy module will then try to find the requested resource online. Be advised that this request might fail too if the online resources are not available at that moment. Do I have the latest version of .... ? We update regularly our libraries and notebooks. To reflect these changes, you need to restart your server. Top right (after login to the Jupyter Hub), click on control panel and click on 'Stop my Server'. Then click on 'Start My Server' and 'Launch Server' until you see a dropdown list (see image). Select python3 and start. We recommend you do this regularly. I am a member of 'project XYZ', but I don't see the project folder. The docker image, and the user permissions (including access to project folders) are regularly updated. To reflect these updates and changes, you need to restart your server. Top right (after login to the Jupyter Hub), click on control panel and click on 'Stop my Server'. Then click on 'Start My Server' and 'Launch Server' until you see a dropdown list (see image). Select python3 and start. Can I get my github repository files? Absolutely. After login to the jupyter hub, we recommend you create a new folder, for example 'github'. Then you can open a new terminal (top right, in the dropdown 'new' select terminal). This brings up a terminal window in your home directory. Change directory into github 'cd github' and clone your desired github repository. For example to have a look at the source code for the icoscp python library, you can do: git clone https://github.com/ICOS-Carbon-Portal/pylib.git . Inside the pylib folder you can use the usual git commands ( https://git-scm.com/docs/gittutorial ). x-axis with DateTime from Matplotlib is 'wrong' [RESOLVED] Update 2021-04-02. We have changed the default behaviour of our jupyter hub to run in UTC. The bug mentioned below does exist only if Timezone is different from UTC. But please be aware, the bug of matplotlib is not resolved. If you run your local instance of jupyter hub, you still might get wrong xticks. [ notebook | result CEST | result UTC ] If you plot with matplotlib.pyplot or the pandas convenience function of dataframe.plot(x, y) and you have date/time objects on the x-axis, there is a chance that the x-axis labels are shifted..... There is a lot of 'magic' happening inside Matplotlib to display date time objects with as little effort as possible from the user. This behaviour is using a operating system file which considers time zones and the dates displayed etc..... So, very often the results from Matplotlib are satisfying and good enough for a quick glance at time series data, but depending on operating system, and the time zone your computer lives in and 'when' the time series start strange things are possible to happen. See the example picture. Hence, if you want to 'guarantee' the outcome of the plot, you need to skip the magic, and 'hardcode' the labels from the data set. Is it possible to use Jupyter Lab? Yes. After you login to https://jupyter.icos-cp.eu you need to modify the address in your internet browser. Change the ?tree parameter to lab jupyter notebook link: https://jupyter.icos-cp.eu/user/myname/tree? jupyter lab link: https://jupyter.icos-cp.eu/user/myName/lab Can I install a missing python package? Yes. You can use pip to install a package into your personal account. Open a new Python Notebook and issue the command !pip install myPackage . But please be aware, that if you collaborate with other people, the package is not available to them. If you think it is worthwhile to have this package/module for all users, drop us an email and we will consider the server side installation. How to log-in to ICOS CP Jupyter Hub Open your internet browser and go to: https://jupyter.icos-cp.eu and enter your login-credentials. If you wish to access our Jupyter Hub, please apply for a personal account ( application form ), or read more about personal accounts and collaboration on https://www.icos-cp.eu/data-services/tools/jupyter-notebook . Once your request has been accepted, you will receive an email with log-in credentials to your account. In case you experience any problems with you log-in credentials, send us an email to jupyter-info@icos-cp.eu. How to log-in to Exploredata Open your internet browser and go to: https://exploredata.icos-cp.eu and enter your login-credentials. Username: myEmailAddress (e.g. kim.nilsson@icos.com) Password: please get in touch to get one This is a public service and is supposed to give you a first glance what a Jupyter Notebook looks like and to explore our example notebooks. Be aware that your work is not saved, but you can download your notebook. If you experience any problems logging-in to exploredata, send us an email to jupyter-info@icos-cp.eu. Data Licence https://data.icos-cp.eu/licence You are free to: Share \u2014 copy and redistribute the material in any medium or format Adapt \u2014 remix, transform, and build upon the material for any purpose, even commercially Under the following terms: Attribution \u2014 You must give appropriate credit, provide a link to the licence, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the licence permits The licensor cannot revoke these freedoms as long as you follow the licence terms.","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#cartopy-maps-i-get-downloadwarning-and-an-error-message","text":"All the cartopy maps used in our notebooks are stored locally on our data server. Accessing a cartopy map in any of these notebooks is actually a request to pre-downloaded local resources. This means that there are specific cartopy maps that can be used with a notebook. We are currently working to have a greater range of cartopy maps offline in order to assist as many users as possible. Workaround If you need to work with a map that currently is not in on our data server, you can comment out this line of code in the notebook \u279c cartopy.config['data_dir'] = '/data/project/cartopy/' The cartopy module will then try to find the requested resource online. Be advised that this request might fail too if the online resources are not available at that moment.","title":"Cartopy maps. I get DownloadWarning and an Error message."},{"location":"faq/#do-i-have-the-latest-version-of","text":"We update regularly our libraries and notebooks. To reflect these changes, you need to restart your server. Top right (after login to the Jupyter Hub), click on control panel and click on 'Stop my Server'. Then click on 'Start My Server' and 'Launch Server' until you see a dropdown list (see image). Select python3 and start. We recommend you do this regularly.","title":"Do I have the latest version of .... ?"},{"location":"faq/#i-am-a-member-of-project-xyz-but-i-dont-see-the-project-folder","text":"The docker image, and the user permissions (including access to project folders) are regularly updated. To reflect these updates and changes, you need to restart your server. Top right (after login to the Jupyter Hub), click on control panel and click on 'Stop my Server'. Then click on 'Start My Server' and 'Launch Server' until you see a dropdown list (see image). Select python3 and start.","title":"I am a member of 'project XYZ', but I don't see the project folder."},{"location":"faq/#can-i-get-my-github-repository-files","text":"Absolutely. After login to the jupyter hub, we recommend you create a new folder, for example 'github'. Then you can open a new terminal (top right, in the dropdown 'new' select terminal). This brings up a terminal window in your home directory. Change directory into github 'cd github' and clone your desired github repository. For example to have a look at the source code for the icoscp python library, you can do: git clone https://github.com/ICOS-Carbon-Portal/pylib.git . Inside the pylib folder you can use the usual git commands ( https://git-scm.com/docs/gittutorial ).","title":"Can I get my github repository files?"},{"location":"faq/#x-axis-with-datetime-from-matplotlib-is-wrong-resolved","text":"Update 2021-04-02. We have changed the default behaviour of our jupyter hub to run in UTC. The bug mentioned below does exist only if Timezone is different from UTC. But please be aware, the bug of matplotlib is not resolved. If you run your local instance of jupyter hub, you still might get wrong xticks. [ notebook | result CEST | result UTC ] If you plot with matplotlib.pyplot or the pandas convenience function of dataframe.plot(x, y) and you have date/time objects on the x-axis, there is a chance that the x-axis labels are shifted..... There is a lot of 'magic' happening inside Matplotlib to display date time objects with as little effort as possible from the user. This behaviour is using a operating system file which considers time zones and the dates displayed etc..... So, very often the results from Matplotlib are satisfying and good enough for a quick glance at time series data, but depending on operating system, and the time zone your computer lives in and 'when' the time series start strange things are possible to happen. See the example picture. Hence, if you want to 'guarantee' the outcome of the plot, you need to skip the magic, and 'hardcode' the labels from the data set.","title":"x-axis with DateTime from Matplotlib is 'wrong' [RESOLVED]"},{"location":"faq/#is-it-possible-to-use-jupyter-lab","text":"Yes. After you login to https://jupyter.icos-cp.eu you need to modify the address in your internet browser. Change the ?tree parameter to lab jupyter notebook link: https://jupyter.icos-cp.eu/user/myname/tree? jupyter lab link: https://jupyter.icos-cp.eu/user/myName/lab","title":"Is it possible to use Jupyter Lab?"},{"location":"faq/#can-i-install-a-missing-python-package","text":"Yes. You can use pip to install a package into your personal account. Open a new Python Notebook and issue the command !pip install myPackage . But please be aware, that if you collaborate with other people, the package is not available to them. If you think it is worthwhile to have this package/module for all users, drop us an email and we will consider the server side installation.","title":"Can I install a missing python package?"},{"location":"faq/#how-to-log-in-to-icos-cp-jupyter-hub","text":"Open your internet browser and go to: https://jupyter.icos-cp.eu and enter your login-credentials. If you wish to access our Jupyter Hub, please apply for a personal account ( application form ), or read more about personal accounts and collaboration on https://www.icos-cp.eu/data-services/tools/jupyter-notebook . Once your request has been accepted, you will receive an email with log-in credentials to your account. In case you experience any problems with you log-in credentials, send us an email to jupyter-info@icos-cp.eu.","title":"How to log-in to ICOS CP Jupyter Hub"},{"location":"faq/#how-to-log-in-to-exploredata","text":"Open your internet browser and go to: https://exploredata.icos-cp.eu and enter your login-credentials. Username: myEmailAddress (e.g. kim.nilsson@icos.com) Password: please get in touch to get one This is a public service and is supposed to give you a first glance what a Jupyter Notebook looks like and to explore our example notebooks. Be aware that your work is not saved, but you can download your notebook. If you experience any problems logging-in to exploredata, send us an email to jupyter-info@icos-cp.eu.","title":"How to log-in to Exploredata"},{"location":"faq/#data-licence","text":"https://data.icos-cp.eu/licence You are free to: Share \u2014 copy and redistribute the material in any medium or format Adapt \u2014 remix, transform, and build upon the material for any purpose, even commercially Under the following terms: Attribution \u2014 You must give appropriate credit, provide a link to the licence, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the licence permits The licensor cannot revoke these freedoms as long as you follow the licence terms.","title":"Data Licence"},{"location":"how_to/","text":"How to ... This part includes some basic instructions on how to login to ICOS Jupyter Hub and start working on your first IPython Notebook. More in particular, you will learn how to: login to ICOS CP Jupyter Hub get familiar with the existing directory tree and available material create and work on your first IPython notebook Log-in to ICOS CP Jupyter Hub Open your browser (Firefox or Chrome) and go to: jupyter.icos-cp.eu Enter your login-credentials in the popup window: Username: [user_username] Password: [user_password] Note that if you wish to access our Jupyter Hub, you will first have to send us an email with your request to jupyter-info@icos-cp.eu. Once your request has been accepted, you will receive an email with log-in credentials to your account. In case you experience any problems with you log-in credentials, send us an email to jupyter-info@icos-cp.eu. Jupyter Hub directory tree and available material Once you have successfully logged-in, you will see a list of directories. Common includes all ICOS notebooks that are openly available through https://exploredata.icos-cp.eu (i.e. introduction-to-Python-notebooks, ICOS-notebooks, scientific notebooks and educational notebooks) as well as some additional code snippets. All notebooks that are stored in common are read-only, meaning that you may run the notebooks in there, but you cannot change them (no changes will be stored). In order to modify any of the aforementioned notebooks, you need to first download the notebook in question to your computer and then upload it again to the Jupyter Hub (instructions on how to download and upload a notebook are available below). Project includes a list of folders with project names. Users will only be able to see the project folders that they are associated with. In general, all files and folders stored directly under the project group folder are visible and editable by all group members. Be aware that this is a true collaborative space. You may interfere with other project partners when working on the same notebook at the same time. Every project folder contains a Store folder. This folder should only contain stable versions of a group's notebooks. Note that the content of this folder is visible to all group members in Read only mode and that only a person from the ICOS CP Jupyter Team has the right to update it. Store contains a README-file, which, in turn, includes summarized information regarding the: aim of the project group administrator (responsible for scientific aspect & group administration) contact details for technical support The group administrator is responsible for managing the group and contacting the ICOS CP Jupyter Team for requests of a technical nature (e.g. creating Jupyter accounts for new members of the group, uploading a new standard version of a notebook to Store , etc.). If you have worked with ICOS CP before, you will see one directory with notebooks running on Python 2.7 from a previous ICOS CP Jupyter Hub instance. The name of this directory is jupyter . If you created any notebooks using the previous ICOS CP Jupyter Hub instance running Python 3.6, you will find those under the directory jupyter3 . Create your first IPython Notebook To create you first IPython notebook, click on New --- > Python 3 . A new tab with your IPython notebook will open in your browser. The notebook is titled Untitled.ipynb . Rename your IPython Notebook If you wish to rename your notebook, you will have to go back to the previous tab including your home directory and then select the notebook you just created and click on Shutdown in the top menu. Then select it again and click on Rename . Note that you can follow a similar process to rename a folder. Run the Notebook To run all the code included in a Jupyter Notebook, go to the menu at the top of the page and click on Kernel and then Restart & Run All . Run a single code-cell in the Notebook A Jupyter Notebook consists of code-cells. It is possible to write Python code in a code-cell and then run it by clicking on Run in the menu at the top of the page. Observe that only one code-cell will be executed, and this is the code-cell that was active when you clicked on Run. You can activate a code-cell just by clicking on it. An active code-cell is highlighted in blue or green colour (see image below). It is also possible to write markup code in a Jupyter Notebook code-cell. For instance, the text you are reading in the notebooks stored under common are written in markup-cells that include markup text and HTML code. When you are writing Python code in a code-cell make sure that the cell is a Python code-cell. The type of the currently active code-cell is shown in the dropdown list on the menu bar at the top of the page (see figure). A code-cell that includes Python code should be marked as Code. Add a new code-cell Click on \"+\" in the menu to add a new code-cell under the current active code-cell. Delete a code-cell If you wish to delete a code-cell, select the code-cell by clicking on it and then go to the menu at the top of the page and click on Edit --- > Delete Cells . Stop Execution If an execution is taking too long, you can stop your notebook from running by clicking on Interrupt kernel in the menu. Alternatively, another choice is to go to Kernel and click on Interrupt. Save Notebook Click on Save to save your work. Download Notebook If you wish to download the notebook as a Jupyter Notebook, go to the menu at the top of the page, click on File --- > Save As... --- > Notebook(.ipynb) . If you wish to save your work as pure Python code, go the menu at the top of the page, click on File --- > Save As... --- > Python(.py) . Upload Notebook If you wish to upload a notebook, click on the Upload button on the right. In the window that appears, navigate to the location where the notebook is stored, select it and click on Open . Read the docs For more information on how to work with Jupyter read the official Jupyter documentation . Restart your jupyter instance Jupyter-Lab interface Use the main menu bar and go to File -> Hub Control Panel . When the control panel window has finished loading, click Stop My Server . Wait one minute until the system performs some additional steps. Finally, click Start My Server . Jupyter-Classic interface From Jupyter's dashboard (where you can list all your directories and files) click the Control Panel button in the upper right corner of Jupyter. When the control panel window has finished loading, click Stop My Server . Wait one minute until the system performs some additional steps. Finally, click Start My Server .","title":"How to"},{"location":"how_to/#how-to","text":"This part includes some basic instructions on how to login to ICOS Jupyter Hub and start working on your first IPython Notebook. More in particular, you will learn how to: login to ICOS CP Jupyter Hub get familiar with the existing directory tree and available material create and work on your first IPython notebook","title":"How to ..."},{"location":"how_to/#log-in-to-icos-cp-jupyter-hub","text":"Open your browser (Firefox or Chrome) and go to: jupyter.icos-cp.eu Enter your login-credentials in the popup window: Username: [user_username] Password: [user_password] Note that if you wish to access our Jupyter Hub, you will first have to send us an email with your request to jupyter-info@icos-cp.eu. Once your request has been accepted, you will receive an email with log-in credentials to your account. In case you experience any problems with you log-in credentials, send us an email to jupyter-info@icos-cp.eu.","title":"Log-in to ICOS CP Jupyter Hub"},{"location":"how_to/#jupyter-hub-directory-tree-and-available-material","text":"Once you have successfully logged-in, you will see a list of directories. Common includes all ICOS notebooks that are openly available through https://exploredata.icos-cp.eu (i.e. introduction-to-Python-notebooks, ICOS-notebooks, scientific notebooks and educational notebooks) as well as some additional code snippets. All notebooks that are stored in common are read-only, meaning that you may run the notebooks in there, but you cannot change them (no changes will be stored). In order to modify any of the aforementioned notebooks, you need to first download the notebook in question to your computer and then upload it again to the Jupyter Hub (instructions on how to download and upload a notebook are available below). Project includes a list of folders with project names. Users will only be able to see the project folders that they are associated with. In general, all files and folders stored directly under the project group folder are visible and editable by all group members. Be aware that this is a true collaborative space. You may interfere with other project partners when working on the same notebook at the same time. Every project folder contains a Store folder. This folder should only contain stable versions of a group's notebooks. Note that the content of this folder is visible to all group members in Read only mode and that only a person from the ICOS CP Jupyter Team has the right to update it. Store contains a README-file, which, in turn, includes summarized information regarding the: aim of the project group administrator (responsible for scientific aspect & group administration) contact details for technical support The group administrator is responsible for managing the group and contacting the ICOS CP Jupyter Team for requests of a technical nature (e.g. creating Jupyter accounts for new members of the group, uploading a new standard version of a notebook to Store , etc.). If you have worked with ICOS CP before, you will see one directory with notebooks running on Python 2.7 from a previous ICOS CP Jupyter Hub instance. The name of this directory is jupyter . If you created any notebooks using the previous ICOS CP Jupyter Hub instance running Python 3.6, you will find those under the directory jupyter3 .","title":"Jupyter Hub directory tree and available material"},{"location":"how_to/#create-your-first-ipython-notebook","text":"To create you first IPython notebook, click on New --- > Python 3 . A new tab with your IPython notebook will open in your browser. The notebook is titled Untitled.ipynb .","title":"Create your first IPython Notebook"},{"location":"how_to/#rename-your-ipython-notebook","text":"If you wish to rename your notebook, you will have to go back to the previous tab including your home directory and then select the notebook you just created and click on Shutdown in the top menu. Then select it again and click on Rename . Note that you can follow a similar process to rename a folder.","title":"Rename your IPython Notebook"},{"location":"how_to/#run-the-notebook","text":"To run all the code included in a Jupyter Notebook, go to the menu at the top of the page and click on Kernel and then Restart & Run All .","title":"Run the Notebook"},{"location":"how_to/#run-a-single-code-cell-in-the-notebook","text":"A Jupyter Notebook consists of code-cells. It is possible to write Python code in a code-cell and then run it by clicking on Run in the menu at the top of the page. Observe that only one code-cell will be executed, and this is the code-cell that was active when you clicked on Run. You can activate a code-cell just by clicking on it. An active code-cell is highlighted in blue or green colour (see image below). It is also possible to write markup code in a Jupyter Notebook code-cell. For instance, the text you are reading in the notebooks stored under common are written in markup-cells that include markup text and HTML code. When you are writing Python code in a code-cell make sure that the cell is a Python code-cell. The type of the currently active code-cell is shown in the dropdown list on the menu bar at the top of the page (see figure). A code-cell that includes Python code should be marked as Code.","title":"Run a single code-cell in the Notebook"},{"location":"how_to/#add-a-new-code-cell","text":"Click on \"+\" in the menu to add a new code-cell under the current active code-cell.","title":"Add a new code-cell"},{"location":"how_to/#delete-a-code-cell","text":"If you wish to delete a code-cell, select the code-cell by clicking on it and then go to the menu at the top of the page and click on Edit --- > Delete Cells .","title":"Delete a code-cell"},{"location":"how_to/#stop-execution","text":"If an execution is taking too long, you can stop your notebook from running by clicking on Interrupt kernel in the menu. Alternatively, another choice is to go to Kernel and click on Interrupt.","title":"Stop Execution"},{"location":"how_to/#save-notebook","text":"Click on Save to save your work.","title":"Save Notebook"},{"location":"how_to/#download-notebook","text":"If you wish to download the notebook as a Jupyter Notebook, go to the menu at the top of the page, click on File --- > Save As... --- > Notebook(.ipynb) . If you wish to save your work as pure Python code, go the menu at the top of the page, click on File --- > Save As... --- > Python(.py) .","title":"Download Notebook"},{"location":"how_to/#upload-notebook","text":"If you wish to upload a notebook, click on the Upload button on the right. In the window that appears, navigate to the location where the notebook is stored, select it and click on Open .","title":"Upload Notebook"},{"location":"how_to/#read-the-docs","text":"For more information on how to work with Jupyter read the official Jupyter documentation .","title":"Read the docs"},{"location":"how_to/#restart-your-jupyter-instance","text":"","title":"Restart your jupyter instance"},{"location":"how_to/#jupyter-lab-interface","text":"Use the main menu bar and go to File -> Hub Control Panel . When the control panel window has finished loading, click Stop My Server . Wait one minute until the system performs some additional steps. Finally, click Start My Server .","title":"Jupyter-Lab interface"},{"location":"how_to/#jupyter-classic-interface","text":"From Jupyter's dashboard (where you can list all your directories and files) click the Control Panel button in the upper right corner of Jupyter. When the control panel window has finished loading, click Stop My Server . Wait one minute until the system performs some additional steps. Finally, click Start My Server .","title":"Jupyter-Classic interface"},{"location":"icos_notebooks/","text":"ICOS Carbon Portal - Notebooks Just like ICOS Carbon Portal provides different Jupyter solutions for each one of the target user groups, it also provides different notebook types. This part is dedicated to presenting these notebook types as well as what purpose each one of them serves. The IPython notebooks available through ICOS Carbon Portal, can be divided into 4 categories: notebooks that help the user to get started with Python notebooks with interactive visualizations for exploring ICOS data scientific notebooks educational notebooks All aforementioned notebooks are usually open to the public. The only exception are the scientific notebooks. A scientific notebook can be private before a related article has been published or before a certain project is over. After that, if all contributors agree, the notebook can become publicly available through one of ICOS Carbon Portal's public Jupyter instances. Introductional The introductory notebooks are aimed for users that are new to programing or, on the contrary, are familiar with programming but in another programming language and wish to quickly learn the syntax of Python. The examples are custom tailored to reflect realistic ICOS use cases. These notebooks can be used by both researchers, educators and students. All examples are custom-tailored to use cases from the ICOS community. Explore ICOS data ICOS Carbon Portal provides notebooks to explore all available ICOS data products. These notebooks include interactive visualizations of ICOS data, that help the user get an overview of data availability, data quality and some statistics. Metadata of the station where the measurements were collected from as well as metadata for each separate measurement are made available through the interactive visualizations. It is for instance also possible to compare measurements from different stations. All plots include text with the citation of the plotted dataset. These notebooks are open access and are aimed for researchers, educators, students and the general public. Scientific Scientific notebooks are aimed for researchers and potentially policymakers. They include well-documented scientific methods applied over ICOS data or a combination of ICOS data and data from other sources. They are usually the result of a collaboration between a group of scientists working together with ICOS Carbon Portal on a research project or article. In this case, the notebook becomes publicly available only after the article has been published. Another possibility, is that the scientific community has requested a tool which then ICOS Carbon Portal has developed in close collaboration with experts in the field. Scientific notebooks include interactive elements that control the content of their visualizations. Visualizations can be static or interactive. Scientific notebooks are a way for scientists to help their work gain more visibility and, at the same time, a contribution to the scientific community, so that other scientists may benefit by using the developed code and potentially improve the implemented methods. Educational ICOS Carbon Portal in collaboration with researchers and pedagogues has developed educational notebooks aimed for high school students, university students and the general public. The notebooks developed for high school students and the general public serve as an introduction to environmental science and programming. The aim of these notebooks is to increase the awareness regarding issues related to climate change by using ICOS data. At the same time, they also introduce the user to basic principles of programming in Python and show why programming is necessary in environmental monitoring. Notebooks developed for university students include exercises focused on a certain scientific topic and programming. The notebooks are focusing on the application of certain methods and the critical assessment of the corresponding results. The code for the visualization of the results is often already been made available so that students may concentrate more on the scientific part without worrying too much about the programming part. Nevertheless, the option to dig deeper in to the implemented code is of course always there.","title":"ICOS Notebooks"},{"location":"icos_notebooks/#icos-carbon-portal-notebooks","text":"Just like ICOS Carbon Portal provides different Jupyter solutions for each one of the target user groups, it also provides different notebook types. This part is dedicated to presenting these notebook types as well as what purpose each one of them serves. The IPython notebooks available through ICOS Carbon Portal, can be divided into 4 categories: notebooks that help the user to get started with Python notebooks with interactive visualizations for exploring ICOS data scientific notebooks educational notebooks All aforementioned notebooks are usually open to the public. The only exception are the scientific notebooks. A scientific notebook can be private before a related article has been published or before a certain project is over. After that, if all contributors agree, the notebook can become publicly available through one of ICOS Carbon Portal's public Jupyter instances.","title":"ICOS Carbon Portal - Notebooks"},{"location":"icos_notebooks/#introductional","text":"The introductory notebooks are aimed for users that are new to programing or, on the contrary, are familiar with programming but in another programming language and wish to quickly learn the syntax of Python. The examples are custom tailored to reflect realistic ICOS use cases. These notebooks can be used by both researchers, educators and students. All examples are custom-tailored to use cases from the ICOS community.","title":"Introductional"},{"location":"icos_notebooks/#explore-icos-data","text":"ICOS Carbon Portal provides notebooks to explore all available ICOS data products. These notebooks include interactive visualizations of ICOS data, that help the user get an overview of data availability, data quality and some statistics. Metadata of the station where the measurements were collected from as well as metadata for each separate measurement are made available through the interactive visualizations. It is for instance also possible to compare measurements from different stations. All plots include text with the citation of the plotted dataset. These notebooks are open access and are aimed for researchers, educators, students and the general public.","title":"Explore ICOS data"},{"location":"icos_notebooks/#scientific","text":"Scientific notebooks are aimed for researchers and potentially policymakers. They include well-documented scientific methods applied over ICOS data or a combination of ICOS data and data from other sources. They are usually the result of a collaboration between a group of scientists working together with ICOS Carbon Portal on a research project or article. In this case, the notebook becomes publicly available only after the article has been published. Another possibility, is that the scientific community has requested a tool which then ICOS Carbon Portal has developed in close collaboration with experts in the field. Scientific notebooks include interactive elements that control the content of their visualizations. Visualizations can be static or interactive. Scientific notebooks are a way for scientists to help their work gain more visibility and, at the same time, a contribution to the scientific community, so that other scientists may benefit by using the developed code and potentially improve the implemented methods.","title":"Scientific"},{"location":"icos_notebooks/#educational","text":"ICOS Carbon Portal in collaboration with researchers and pedagogues has developed educational notebooks aimed for high school students, university students and the general public. The notebooks developed for high school students and the general public serve as an introduction to environmental science and programming. The aim of these notebooks is to increase the awareness regarding issues related to climate change by using ICOS data. At the same time, they also introduce the user to basic principles of programming in Python and show why programming is necessary in environmental monitoring. Notebooks developed for university students include exercises focused on a certain scientific topic and programming. The notebooks are focusing on the application of certain methods and the critical assessment of the corresponding results. The code for the visualization of the results is often already been made available so that students may concentrate more on the scientific part without worrying too much about the programming part. Nevertheless, the option to dig deeper in to the implemented code is of course always there.","title":"Educational"},{"location":"jupyter_solutions/","text":"ICOS Carbon Portal - Jupyter Solutions ICOS data and metadata are stored on the ICOS Carbon Portal servers. ICOS goal is to provide standardized, high quality, high precision, long-time observations of greenhouse gases to estimate the carbon balance of Europe. ICOS observations can also be used to monitor the effects of climate change and raise awareness on this global problem. As part of this effort, ICOS Carbon Portal provides a range of services to scientists, policy makers, educators, students and the general public. To make it easier for users to access, process and interact with ICOS data, ICOS Carbon Portal offers several alternative Jupyter solutions. There are implemented solutions that allow collaboration between scientists working on the same project, by sharing data and code. Additionally, there are solutions that address the need of scientists wanting to use ICOS data in combination with their own data. Finally, ICOS Carbon Portal has developed Jupyter solutions for promoting the data, metadata and role of ICOS to people who might not have any direct link to or prior knowledge of ICOS, like researchers, policy makers, educators, students or the general public. Jupyter Hub The Jupyter Hub is a service for registered users. It is aimed for researchers and research groups that make use of ICOS data as part of a funded project or as part of any other kind of collaboration. Every user receives an account and has the option to upload data, write code and create own directories. All work is saved. The user account is private and inaccessible to other users. However, if the user is part of a research group, there is the possibility of having shared directories between all members of that group. Members of the same research group can share code and data within the project group directory. Users that are not members of this research group, will not have access to the project-related directories. The Jupyter Hub runs in a Virtual Machine with docker containers. Jupyter Hub registered users run operations using ICOS CP resources. Exploredata Exploredata is a multiple purpose testing platform that is mainly used in presentations and short seminars. It is aimed for all target user groups, to test and discover the potential of IPython notebooks as a mean for presenting scientific output and visualizations of ICOS data. All notebooks on exploredata are open to the public. Exploredata is a Jupyter solution that requires log-in credentials and provides the same functionality as the Jupyter Hub, with the difference that no work is being stored. Every time a user logs in to exploredata a new Jupyter instance is created in a new docker container. The container is deleted after the user logs out or remains inactive for more than 15 minutes. Observe that exploredata can only host a limited number of users logged in at the same time. Temporary Jupyter Instances A temporary Jupyter instance can be used for a course, workshop or seminar. This type of solution offers the same functionalities as the Jupyter Hub. It supports multiple users who may or may not have shared directories, though every account is private. Users may upload their own data and create their own code files and directories. All work is stored. The only difference is that this Jupyter instance, including the content from all user accounts, is deleted after the course, workshop or seminar has ended. If users wish to save their work, then they have to download it before the instance is deleted. ICOS Carbon Portal has successfully used a temporary Jupyter instance for the purpose of a PhD-course, where all exercise material was made available in the form of IPython notebooks.","title":"Jupyter Solutions"},{"location":"jupyter_solutions/#icos-carbon-portal-jupyter-solutions","text":"ICOS data and metadata are stored on the ICOS Carbon Portal servers. ICOS goal is to provide standardized, high quality, high precision, long-time observations of greenhouse gases to estimate the carbon balance of Europe. ICOS observations can also be used to monitor the effects of climate change and raise awareness on this global problem. As part of this effort, ICOS Carbon Portal provides a range of services to scientists, policy makers, educators, students and the general public. To make it easier for users to access, process and interact with ICOS data, ICOS Carbon Portal offers several alternative Jupyter solutions. There are implemented solutions that allow collaboration between scientists working on the same project, by sharing data and code. Additionally, there are solutions that address the need of scientists wanting to use ICOS data in combination with their own data. Finally, ICOS Carbon Portal has developed Jupyter solutions for promoting the data, metadata and role of ICOS to people who might not have any direct link to or prior knowledge of ICOS, like researchers, policy makers, educators, students or the general public.","title":"ICOS Carbon Portal - Jupyter Solutions"},{"location":"jupyter_solutions/#jupyter-hub","text":"The Jupyter Hub is a service for registered users. It is aimed for researchers and research groups that make use of ICOS data as part of a funded project or as part of any other kind of collaboration. Every user receives an account and has the option to upload data, write code and create own directories. All work is saved. The user account is private and inaccessible to other users. However, if the user is part of a research group, there is the possibility of having shared directories between all members of that group. Members of the same research group can share code and data within the project group directory. Users that are not members of this research group, will not have access to the project-related directories. The Jupyter Hub runs in a Virtual Machine with docker containers. Jupyter Hub registered users run operations using ICOS CP resources.","title":"Jupyter Hub"},{"location":"jupyter_solutions/#exploredata","text":"Exploredata is a multiple purpose testing platform that is mainly used in presentations and short seminars. It is aimed for all target user groups, to test and discover the potential of IPython notebooks as a mean for presenting scientific output and visualizations of ICOS data. All notebooks on exploredata are open to the public. Exploredata is a Jupyter solution that requires log-in credentials and provides the same functionality as the Jupyter Hub, with the difference that no work is being stored. Every time a user logs in to exploredata a new Jupyter instance is created in a new docker container. The container is deleted after the user logs out or remains inactive for more than 15 minutes. Observe that exploredata can only host a limited number of users logged in at the same time.","title":"Exploredata"},{"location":"jupyter_solutions/#temporary-jupyter-instances","text":"A temporary Jupyter instance can be used for a course, workshop or seminar. This type of solution offers the same functionalities as the Jupyter Hub. It supports multiple users who may or may not have shared directories, though every account is private. Users may upload their own data and create their own code files and directories. All work is stored. The only difference is that this Jupyter instance, including the content from all user accounts, is deleted after the course, workshop or seminar has ended. If users wish to save their work, then they have to download it before the instance is deleted. ICOS Carbon Portal has successfully used a temporary Jupyter instance for the purpose of a PhD-course, where all exercise material was made available in the form of IPython notebooks.","title":"Temporary Jupyter Instances"}]}